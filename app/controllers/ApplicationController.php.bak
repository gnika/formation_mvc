<?php

/**
 * Base controller for the application.
 * Add general things in this controller.
 */
class ApplicationController extends Controller 
{
    public function indexAction()
    {
        $modelFilm = new Film();
        $this->view->films = $modelFilm->fetchAll();
    }

    public function filmsAction()
    {
        $modelFilm = new Film();
        $categModel = new Categorie();
        $FilmCategModel = new FilmCateg();

        $searchTitre = $this->_getParam('titre');
        $delete = $this->_getParam('iddelete');
        if ($delete != '') {
            $this->view->delete = $modelFilm->delete($delete);
            $FilmCategModel->deleteCategFilm($delete);
        }
        $films = $modelFilm->fetchAll('titre asc');
        if ($searchTitre != '') {
            $films = $modelFilm->searchByTitre($searchTitre);
            $this->view->search = $searchTitre;
        }
        $categs = [];
        foreach ($films as $film) {
            $categs[$film->id] =
                $categModel->categorieFilm($film->id);
        }
//print_r($categs);die();
        $this->view->films = $films;
        $this->view->categs = $categs;
        $this->view->allCateg = $categModel->fetchAll('nom asc');
        $this->view->session = $_SESSION['user']['profil'];
    }


    public function categoriesAction()
    {
        $cats = new Categorie();

        $delete = $this->_getParam('iddelete');
        if ($delete != ''){
            Utils::message($cats->delete($delete),
                'La catégorie a été supprimée avec succès',
                'La catégorie n\'a pas pu être supprimée');
        }













        $categs = $cats->fetchAll('nom asc');
        $this->view->categs = $categs;










        if( isset( $_SESSION['user']['profil']) )
            $this->view->session = $_SESSION['user']['profil'];
    }

    public function categorieAction()
    {
        $id = $this->_getParam('id');
        $cats = new Categorie();
        $categ = $cats->fetchOne($id);

        $this->view->categ = $categ;
    }

    public function addcategAction()
    {
        if (!isset( $_SESSION['user'] ) || $_SESSION['user']['profil']->role != 2) die("Vous n'avez pas la permission de vous trouver ici");

        if (isset($_POST['categorie'])) {
            $nom = $_POST['categorie'];
            $alias = Utils::generateSlug($nom);

            $params = [
                'nom' => $nom,
                'slug' => $alias
            ];

            $cat = new Categorie();
            Utils::message($cat->save($params),
                'la categorie a bien été ajoutée',
                'la catégorie n\'a pas pu être ajoutée');


            header('Location: ' . WEB_ROOT . '/categories');
            exit();
        }
    }

    public function addfilmAction()
    {
        if (!isset($_SESSION['user']) || $_SESSION['user']['profil']->role != 2) die("Vous n'avez pas la permission de vous trouver ici");

        $filmModel = new Film();
        $filmCateg = new FilmCateg();
        $cat = new Categorie();
        $this->view->cats = $cat->fetchAll();

        $idParam = $this->_getParam('id');
        if ($idParam != '')
            $filmUpdate = $filmModel->fetchOne($idParam);

        $titre = $this->_getParam('titre');
        $categ = $this->_getParam('categ');
        $description = $this->_getParam('description');
        $date_sortie = $this->_getParam('date_sortie');
        $prix = $this->_getParam('prix');


        if ($titre != '' && count($categ) > 0 && $description != '' && $date_sortie != '') {

            $alias = Utils::generateSlug($titre);
            if ($_FILES['image']['name'] != '') {
                $titleImg = md5(uniqid(rand(), true));
                $extensions_valides = array('jpg', 'jpeg', 'gif', 'png');
                $extension_upload = strtolower(substr(strrchr($_FILES['image']['name'], '.'), 1));
                $titleImg = $titleImg . '.' . $extension_upload;
                Utils::upload('image', 'images/film/' . $titleImg, FALSE, false);
            } elseif ($idParam != '')
                $titleImg = $filmUpdate->image;
            else
                $titleImg = "default.jpg";



            $params = [
                'titre' => $titre,
                'image' => $titleImg,
                'slug' => $alias,
                'description' => $description,
                'prix' => $prix,
                'date_sortie' => $date_sortie
            ];
            if ($idParam != '') $params['id'] = $idParam;

            $insertReturn = $filmModel->save($params);
			
            if ($insertReturn > 0) {
                if ($idParam != '') 
					$filmCateg->deleteCategFilm($idParam);
print_r($categ);die();
                foreach ($categ as $cate) {
                    $params = [
                        'id_film' => ($idParam) ? $idParam : $insertReturn,
                        'id_categorie' => $cate
                    ];
					// echo '<pre>';print_r($params);die();
                    $filmCateg->save($params);
                }
            }

            $this->view->reussite = $insertReturn;;//s’occuper du message de félicitation dans la vue formulaire de création de film
            //					 Utils::message($insertReturn, 'Le film a bien été ajouté', 'Le film n\'a pas pu être ajouté');
        }
        if ($idParam != '') {
            $this->view->film = $filmModel->fetchOne($idParam);
            $this->view->categs = $cat->categorieFilm($idParam, PDO::FETCH_ASSOC);
        }
    }

    public function filmAction()
    {
        $id = $this->_getParam('id');
        $comment = $this->_getParam('comment');

        $com = new Commentaire();
        if ($comment) {
            $optradio = $this->_getParam('optradio');
            $id_user = $_SESSION['user']['profil']->id;

            $this->view->commInsert = $com->save([
                'id_user' => $id_user,
                'id_film' => $id,
                'commentaire' => $comment,
                'note' => $optradio
            ]);
        }

        $commentaires = $com->searchByFilm($id);

        $cat = new Categorie();
        $filmModel = new Film();
        $this->view->film = $filmModel->fetchOne($id);
        $this->view->categs = $cat->categorieFilm($id);
        $this->view->comms = $commentaires;
        $this->view->nbcomms = count($commentaires);
        $this->view->id = $id;
		
        $this->view->user = $_SESSION['user']['profil'];
    }

}

